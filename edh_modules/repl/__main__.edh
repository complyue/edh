
while true {

  {

    for cmd from runtime.readCommands(ps1="Đ: ", ps2="Đ| ")
      do case type(cmd) of {
        nil -> { continue }
        runtime.print( cmd )
    }

  } $=> {  # catch exceptions

    {{ ProgramHalt: ph }} -> {
      throw ph  # escalate a halt to the program loop of the
      # host interpreter, let it decide what to do.
    }

    {{ IOError:exc }} -> {
      runtime.fatal <| 'IO error - ' ++ exc
      return exc  # halt the program with error
    }

    { exc } -> {
      runtime.print( 'Recovered from error', exception=exc )
    }

  }

}
