{
  evs = sink
  stopSig = sink 

  go {

    defer {
      console.info <| "I'm really done."
    }

    perceive stopSig {
      nil -> {
        console.warn <| '  🎬  stopping because end-of-stream'
        fallthrough
      }
      { ev } -> {
        console.info <| '  🎬  stopping because: ' ++ ev
        fallthrough
      }
      break  # break from a perceiver terminates the thread
    }

    for ev from evs do {
      console.info <| '  🎐  sth happening: ' ++ ev
    }

  }

  # wait a second
  for _ from console.everySeconds(1) do { break }

  evs <- '  🛎️  ding.ding..'

  # wait a second
  for _ from console.everySeconds(1) do { break }

  # stopSig <- "don't do that!"

  evs <- '  🍃  chill..chill...'

  # wait a second
  for _ from console.everySeconds(1) do { break }

  stopSig <- "that's enough!"

  evs <- '  ☎️  ling.ling..ling...'

}
