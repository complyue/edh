
# here the language constructs for RPC support is demostrated,
# for actual working examples of RPC over the network, checkout
# the [nedh](https://github.com/e-wrks/nedh) project and its tour.


{
  # mockup some remote site environment

  method evalRemotely ( xpr ) {
    mockupEnv = scope() # use the scope of this proc

    # emulate procedures available at a remote site
    method callThePolice ( telno ) {
      console.warn<| 'Alerts ringing #tel ' ++ telno ++ ' ...'
    }

    # simulate remote exec
    mockupEnv.eval( xpr )
  }

}


{
  # MWE of some lib/framework

  # unique tag class for countries
  class Country { __repr__ = 'Country()' }

  # some known countries
  CN := Country()
  US := Country()
  JP := Country()

  # lookup the emergency call number for a country
  method emergCallNumOf( c ) case c of {
    CN -> 110
    US -> 911
    JP -> 999
    error( "I don't know your country: " ++ c )
  }

}


{
  # MWE of some app snippet

  currentCountry = CN

  rpc = expr callThePolice( telno = {$ emergCallNumOf(currentCountry) $} )
  console.info<| 'Remote procedure call:\n  ' ++ rpc

  evalRemotely( rpc )

}


quit
